package com.sample
import javax.swing.*;
import org.kie.api.runtime.KieRuntime;
import java.util.ArrayList;
import com.sample.DroolsTest.*;

global JFrame frame ;

declare Question
	question: String
	answer: String
end

rule "Ask about action"
	when
	then
		Question question = new Question();
		question.setQuestion(questions(1));
		insert(question);
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Ask about Terminator"
    when
        question : Question(question == questions(1), answer == "Yes")
    then
        question.setQuestion(questions(2));
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Ask about documentary"
    when
        question : Question(question == questions(1), answer == "No")
    then
        question.setQuestion(questions(3));
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Recommend Terminator 2"
    when
        question : Question(question == questions(2), answer == "Yes")
    then
		recommendWindow(frame, "Terminator 2: Judgement Day");
end


function String questions(int n) {
	switch(n) {
		case 1: return "Want your night to be action packed?";
		case 2: return "Have you seen The Terminator?";
		case 3: return "What about a documentary?";
		case 4: return "How about a war movie?";
		case 5: return "Horses, boots, and 10-galon hats?";
		case 6: return "You want to go oldschool or keep it fresh?";
		case 7: return "Do you want to keep it serious?";
		case 8: return "Set in the future or present day?";
		case 9: return "Do you consider snowboard films to be documentaries?";
		case 10: return "Do you want to have your face melted off reom maximum rock?";
		case 11: return "Take it to the streets?";
		case 12: return "Plain or Paint?";
		case 13: return "Do you want to see how ridiculous religion can be?";
		case 14: return "Are you Woody Allen fan? Or would you like to become one?";
		case 15: return "Do subtitels bother you?";
		case 16: return "Monsters, murderers and madness?";
		case 17: return "Should there be a blood-soaked chainsaw at some point?";
		case 18: return "Three parts clasic horror, one part something new?";
		case 19: return "Do abandoned asylums scare the sence uot you?";
		case 20: return "Are in the mood to laugh?";
		case 21: return "Do you want some drama with your laughter?";
		case 22: return "Do you mind if people break out singing?";
		case 23: return "Do you find wordplay entertaining?";
		case 24: return "Are you adverse to black and white?";
		case 25: return "Do you love Paul Newman? Do you want to?";
		case 26: return "Do you want to watch something great or legendary?";
		case 27: return "Gritty or pretty?";
		case 28: return "Slow-paced quirky romantic indie?";
		case 29: return "Do you like your humor to be more or less lewd?";
		case 30: return "Do you hunger for adventure?";
		case 31: return "Where you a fan of Firefly?";
		case 32: return "Do you like main rolls be played by kids?";
		case 33: return "Want some thrills with your adventure?";
		case 34: return "Care for some criminal intent?";
		case 35: return "Do you enjoy diatribes entirely unrelated to plot?";
		case 36: return "Are you upset by seeing drug use?";
		case 37: return "Do you love hip-hop?";
		case 38: return "Mob story?";
		case 39: return "Redy for some romance?";
		case 40: return "Hypothetically: would a long brutal rape scene ruin your night?";
		case 41: return "Have you seen the original Girl with the Dragon Tattoo?";
		case 42: return "Have you seen The Girl Who Played with Fire?";
		case 43: return "Do you want to be completely confused?";
		case 44: return "Are subtitels going to be a problem?";
		case 45: return "Keep it mellow?";
		case 46: return "Tom Cruise or Matt Damon?";
		default: return "";
	}
}

function String askWindow(JFrame frame, String question, ArrayList variants) {
		Object[] options = {variants.get(0),
                            variants.get(1)};
                            
		int response = JOptionPane.showOptionDialog(frame,
                                             question,
                                             "Netflix",
                                             JOptionPane.YES_NO_OPTION,
                                             JOptionPane.QUESTION_MESSAGE,
                                             null,
                                             options,
                                             options[0]);
		
		switch (response) {
    		case JOptionPane.YES_OPTION: return (String)variants.get(0);
    		case JOptionPane.NO_OPTION: return (String)variants.get(1);
    		default: return "";
    	}
}

function void recommendWindow(JFrame frame, String recommendation) {
	int n = JOptionPane.showConfirmDialog(null, 
                recommendation, "Recommendation", JOptionPane.PLAIN_MESSAGE);
}
