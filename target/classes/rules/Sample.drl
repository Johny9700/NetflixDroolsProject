package com.sample
import javax.swing.*;
import org.kie.api.runtime.KieRuntime;
import java.util.ArrayList;
import com.sample.DroolsTest.*;

global JFrame frame ;

declare Question
	question: String
	answer: String
end

rule "Ask about action"
	when
	then
		Question question = new Question();
		question.setQuestion(questions(1));
		insert(question);
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Ask about Terminator"
    when
        question : Question(question == questions(1), answer == "Yes")
    then
        question.setQuestion(questions(2));
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Ask about documentary"
    when
        question : Question(question == questions(1), answer == "No")
    then
        question.setQuestion(questions(3));
		ArrayList<String> variants = new ArrayList<>();
		variants.add("Yes");
		variants.add("No");
		String ans = askWindow(frame, question.getQuestion(), variants);
		question.setAnswer(ans);
		update(question);
end

rule "Recommend Terminator 2"
    when
        question : Question(question == questions(2), answer == "Yes")
    then
		recommendWindow(frame, "Terminator 2: Judgement Day");
end


function String questions(int n) {
	switch(n) {
		case 1: return "Want your night to be action packed?";
		case 2: return "Have you seen The Terminator?";
		case 3: return "What about a documentary?";
		case 4: return "How about a war movie?";
		case 5: return "Horses, boots, and 10-galon hats?";
		case 6: return "You want to go oldschool or keep it fresh?";
		case 7: return "Do you want to keep it serious?";
		case 8: return "Set in the future or present day?";
		case 9: return "Do you consider snowboard films to be documentaries?";
		case 10: return "";
		default: return "";
	}
}

function String askWindow(JFrame frame, String question, ArrayList variants) {
		Object[] options = {variants.get(0),
                            variants.get(1)};
                            
		int response = JOptionPane.showOptionDialog(frame,
                                             question,
                                             "Netflix",
                                             JOptionPane.YES_NO_OPTION,
                                             JOptionPane.QUESTION_MESSAGE,
                                             null,
                                             options,
                                             options[0]);
		
		switch (response) {
    		case JOptionPane.YES_OPTION: return (String)variants.get(0);
    		case JOptionPane.NO_OPTION: return (String)variants.get(1);
    		default: return "";
    	}
}

function void recommendWindow(JFrame frame, String recommendation) {
	int n = JOptionPane.showConfirmDialog(null, 
                recommendation, "Recommendation", JOptionPane.PLAIN_MESSAGE);
}
